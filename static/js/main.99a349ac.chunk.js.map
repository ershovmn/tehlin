{"version":3,"sources":["panels/FirstLogin.js","panels/Reports.js","panels/Home.js","App.js","index.js"],"names":["FirstLogin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendForm","state","firstName","length","lastName","groupID","console","log","fetch","method","headers","Content-Type","body","JSON","stringify","userid","userID","firstname","lastname","middlename","middleName","groupid","gender","then","data","json","sessionStorage","setItem","token","props","go","fetchedUser","_this2","connect","sendPromise","last_name","setState","first_name","id","sex","catch","error","_this3","flag","react_default","a","createElement","es6","top","value","onChange","e","target","status","placeholder","size","disabled","onClick","React","Component","Reports","activePanel","reports","popout","tehnarenok-token","getItem","map","key","_id","description","discription","name","Home","activeStory","tabbar","selected","text","note_default","settings_default","panels_Reports","App","panel","concat","panels_FirstLogin","panels_Home","send","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.99a349ac.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {View, Panel, FormLayout, Input, Select, Button, PanelHeader} from '@vkontakte/vkui'\r\nimport connect from '@vkontakte/vk-connect'\r\n\r\nclass FirstLogin extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            userID: null,\r\n            groupID: '',\r\n            gender: true,\r\n            fetchedUser: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        \r\n        connect.sendPromise('VKWebAppGetUserInfo', {})\r\n\t\t\t.then(data => {\r\n                console.log(data)\r\n                //this.setState({ fetchedUser: data})\r\n                if(data.last_name === 'Мещерская') {\r\n                    data.last_name = 'Ерщерская'\r\n                }\r\n                if(data.last_name === 'Ершов') {\r\n                    data.last_name = 'Ерщерский'\r\n                }\r\n\r\n                this.setState({\r\n                    firstName: data.first_name,\r\n                    lastName: data.last_name,\r\n                    middleName: '',\r\n                    userID: data.id,\r\n                    groupID: '',\r\n                    gender: data.sex === 2,\r\n                })\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n    }\r\n\r\n    sendForm = () => {\r\n        if(!(this.state.firstName.length > 0 &&\r\n            this.state.lastName.length > 0 &&\r\n            this.state.groupID.length > 0)) {\r\n            return\r\n        } else {\r\n            console.log('hello')\r\n            fetch('https://4239c859.ngrok.io/api/v0/firstlogin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    userid: this.state.userID,\r\n                    firstname: this.state.firstName,\r\n                    lastname: this.state.lastName,\r\n                    middlename: this.state.middleName,\r\n                    groupid: this.state.groupID,\r\n                    gender: this.state.gender\r\n                })\r\n            }).then(data => {\r\n                return data.json()\r\n            }).then(data => {\r\n                sessionStorage.setItem('token', data.token)\r\n                this.props.go('home')\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var flag = (this.state.firstName.length > 0) &&\r\n            (this.state.lastName.length > 0) &&\r\n            (this.state.groupID.length > 0)\r\n        \r\n        return (\r\n            <Panel id={this.props.id}>\r\n                <PanelHeader>\r\n                    Регистрация\r\n                </PanelHeader>\r\n                <p>\r\n                    Внимание!!!\r\n                </p>\r\n                <p>\r\n                    ФИО изменить после регистрации можно только с помощью модератора!\r\n                </p>\r\n                <p>\r\n                    Данное ФИО будет использовано в поле отчета \"выполнил\"\r\n                </p>\r\n                <FormLayout>\r\n                    <Input \r\n                        top=\"Фамилия\"\r\n                        value={this.state.lastName}\r\n                        onChange={(e) => this.setState({lastName: e.target.value})}\r\n                        status={this.state.lastName.length > 0 ? 'valid' : 'error'}\r\n                    />\r\n                    <Input \r\n                        top=\"Имя\"\r\n                        value={this.state.firstName}\r\n                        onChange={(e) => this.setState({firstName: e.target.value})}\r\n                        status={this.state.firstName.length > 0 ? 'valid' : 'error'}\r\n                    />\r\n                    <Input \r\n                        top=\"Отчество\"\r\n                        value={this.state.middleName}\r\n                        onChange={(e) => this.setState({middleName: e.target.value})}\r\n                    />\r\n                    <Select value={this.state.gender ? \"m\" : \"f\"} top=\"Пол\" placeholder=\"\" onChange={(e) => this.setState({gender: e.target.value === \"m\"})}>\r\n                        <option value=\"m\">Мужской</option>\r\n                        <option value=\"f\">Женский</option>\r\n                    </Select>\r\n                    <Input \r\n                        top=\"Номер группы\"\r\n                        value={this.state.groupID}\r\n                        onChange={(e) => this.setState({groupID: e.target.value})}\r\n                        status={this.state.groupID.length > 0 ? 'valid' : 'error'}\r\n                    />\r\n                    <Button size=\"xl\" disabled={!flag} onClick={() => this.sendForm()}>Зарегистрироваться</Button>\r\n                </FormLayout>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FirstLogin","import React from 'react'\r\nimport {View, Panel, PanelHeader, ScreenSpinner, List, Cell, Group} from '@vkontakte/vkui'\r\n\r\nclass Reports extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            activePanel: 'reports',\r\n            reports: [],\r\n            popout: <ScreenSpinner />\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://4239c859.ngrok.io/api/v0/allreports', {\r\n            method: 'GET',\r\n            headers: {\r\n                'tehnarenok-token': sessionStorage.getItem('token')\r\n            }\r\n        }).then(data => {\r\n            return data.json()\r\n        }).then(data => {\r\n            this.setState({reports: data.reports, popout: null})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <View id={this.props.id} activePanel={this.state.activePanel} popout={this.state.popout}>\r\n                <Panel id='reports'>\r\n                    <PanelHeader>\r\n                        Отчеты\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <List>\r\n                            {this.state.reports && this.state.reports.length > 0 && this.state.reports.map((value) => {\r\n                                return (\r\n                                    <Cell key={value._id} description={value.discription}>{value.name}</Cell>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports","import React from 'react'\r\n\r\nimport {View, Panel, Epic, Tabbar, TabbarItem, PanelHeader} from '@vkontakte/vkui'\r\n\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\n\r\nimport Reports from './Reports'\r\n\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            activeStory: 'reports'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Epic id={this.props.id} activeStory={this.state.activeStory} tabbar ={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={() => this.setState({activeStory: 'reports'})}\r\n                        selected={this.state.activeStory === 'reports'}\r\n                        text='Отчеты'\r\n                    >\r\n                        <Icon24Note />\r\n                    </TabbarItem>\r\n                    \r\n                    <TabbarItem \r\n                        onClick={() => this.setState({activeStory: 'settings'})}\r\n                        selected={this.state.activeStory === 'settings'}\r\n                        text='Настройки'\r\n                    >\r\n                        <Icon24Settings />\r\n                    </TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <Reports id='reports' />\r\n                <View id='settings' activePanel='settings'>\r\n                    <Panel id='settings'>\r\n                        <PanelHeader>\r\n                            Настройки\r\n                        </PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport { View, Panel, ScreenSpinner, PanelHeader } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport FirstLogin from './panels/FirstLogin'\nimport Home from './panels/Home'\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'black',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner />,\n\t\t\ttoken: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.sendPromise('VKWebAppGetUserInfo', {})\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({ fetchedUser: data})\n\t\t\t\tfetch(`https://4239c859.ngrok.io/api/v0/gettoken?userid=${this.state.fetchedUser.id}`, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t}).then(data => {\n\t\t\t\t\treturn data.json()\n\t\t\t\t}).then(data => {\n\t\t\t\t\tif(data.token) {\n\t\t\t\t\t\tsessionStorage.setItem('token', data.token)\n\t\t\t\t\t\t//console.log(sessionStorage.getItem('token'))\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tactivePanel: 'home',\n\t\t\t\t\t\t\tpopout: null,\n\t\t\t\t\t\t\ttoken: data.token\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tactivePanel: 'firstlogin',\n\t\t\t\t\t\t\tpopout: null\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t\n\t}\n\n\tgo = (panel) => {\n\t\tthis.setState({\n\t\t\tpopout: null,\n\t\t\tactivePanel: panel\n\t\t})\n\t}\n\n\trender() {\n\t\tconsole.log(this.state)\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t<Panel id='black'> </Panel>\n\t\t\t\t<FirstLogin id='firstlogin' go={this.go} />\n\t\t\t\t<Home id='home' />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}