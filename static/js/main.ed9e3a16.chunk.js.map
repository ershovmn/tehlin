{"version":3,"sources":["panels/FirstLogin.js","panels/Report/ReportDraggingList.js","panels/Reports.js","panels/Home.js","App.js","index.js"],"names":["FirstLogin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendForm","state","firstName","length","lastName","groupID","console","log","fetch","sessionStorage","getItem","method","headers","Content-Type","body","JSON","stringify","userid","userID","firstname","lastname","middlename","middleName","groupid","gender","then","data","json","setItem","token","props","go","fetchedUser","_this2","connect","sendPromise","last_name","setState","first_name","id","sex","catch","error","_this3","flag","react_default","a","createElement","es6","top","value","onChange","e","target","status","size","disabled","onClick","React","Component","ReportDraggingList","addElement","activeModal","addNewElement","elementID","items","push","type","inputType","modify","description","editElement","item","editItem","itemID","activePanel","name","popout","report","concat","reportID","tehnarenok-token","goTo","modal","onClose","settlingHeight","header","right","platform","IOS","done_default","key","_this3$state","title","left","chevron_back_default","back_default","structureFrontend","indexOf","multiple","map","index","onDragFinish","_ref","from","to","NaN","before","draggable","Reports","onRefresh","reports","onClickReport","isFetching","Report_ReportDraggingList","_id","discription","structureID","Home","activeStory","tabbar","selected","text","note_default","settings_default","panels_Reports","App","panel","panels_FirstLogin","panels_Home","send","subscribe","detail","schemeAttribute","document","createAttribute","scheme","attributes","setNamedItem","app_id","scope","access_token","src_this","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.ed9e3a16.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {View, Panel, FormLayout, Input, Select, Button, PanelHeader} from '@vkontakte/vkui'\r\nimport connect from '@vkontakte/vk-connect'\r\n\r\nclass FirstLogin extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            userID: null,\r\n            groupID: '',\r\n            gender: true,\r\n            fetchedUser: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        \r\n        connect.sendPromise('VKWebAppGetUserInfo', {})\r\n\t\t\t.then(data => {\r\n                console.log(data)\r\n                //this.setState({ fetchedUser: data})\r\n                if(data.last_name === 'Мещерская') {\r\n                    data.last_name = 'Ерщерская'\r\n                }\r\n                if(data.last_name === 'Ершов') {\r\n                    data.last_name = 'Ерщерский'\r\n                }\r\n\r\n                this.setState({\r\n                    firstName: data.first_name,\r\n                    lastName: data.last_name,\r\n                    middleName: '',\r\n                    userID: data.id,\r\n                    groupID: '',\r\n                    gender: data.sex === 2,\r\n                })\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n    }\r\n\r\n    sendForm = () => {\r\n        if(!(this.state.firstName.length > 0 &&\r\n            this.state.lastName.length > 0 &&\r\n            this.state.groupID.length > 0)) {\r\n            return\r\n        } else {\r\n            console.log('hello')\r\n            fetch(sessionStorage.getItem('address') + '/api/v0/firstlogin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    userid: this.state.userID,\r\n                    firstname: this.state.firstName,\r\n                    lastname: this.state.lastName,\r\n                    middlename: this.state.middleName,\r\n                    groupid: this.state.groupID,\r\n                    gender: this.state.gender\r\n                })\r\n            }).then(data => {\r\n                return data.json()\r\n            }).then(data => {\r\n                sessionStorage.setItem('token', data.token)\r\n                this.props.go('home')\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var flag = (this.state.firstName.length > 0) &&\r\n            (this.state.lastName.length > 0) &&\r\n            (this.state.groupID.length > 0)\r\n        \r\n        return (\r\n            <Panel id={this.props.id}>\r\n                <PanelHeader>\r\n                    Регистрация\r\n                </PanelHeader>\r\n                <p>\r\n                    Внимание!!!\r\n                </p>\r\n                <p>\r\n                    ФИО изменить после регистрации можно только с помощью модератора!\r\n                </p>\r\n                <p>\r\n                    Данное ФИО будет использовано в поле отчета \"выполнил\"\r\n                </p>\r\n                <FormLayout>\r\n                    <Input \r\n                        top=\"Фамилия\"\r\n                        value={this.state.lastName}\r\n                        onChange={(e) => this.setState({lastName: e.target.value})}\r\n                        status={this.state.lastName.length > 0 ? 'valid' : 'error'}\r\n                    />\r\n                    <Input \r\n                        top=\"Имя\"\r\n                        value={this.state.firstName}\r\n                        onChange={(e) => this.setState({firstName: e.target.value})}\r\n                        status={this.state.firstName.length > 0 ? 'valid' : 'error'}\r\n                    />\r\n                    <Input \r\n                        top=\"Отчество\"\r\n                        value={this.state.middleName}\r\n                        onChange={(e) => this.setState({middleName: e.target.value})}\r\n                        status={'valid'}\r\n                    />\r\n                    <Select \r\n                        value={this.state.gender ? \"m\" : \"f\"} \r\n                        top=\"Пол\" \r\n                        onChange={(e) => this.setState({gender: e.target.value === \"m\"})}\r\n                        status={'valid'}\r\n                    >\r\n                        <option value=\"m\">Мужской</option>\r\n                        <option value=\"f\">Женский</option>\r\n                    </Select>\r\n                    <Input \r\n                        top=\"Номер группы\"\r\n                        value={this.state.groupID}\r\n                        onChange={(e) => this.setState({groupID: e.target.value})}\r\n                        status={this.state.groupID.length > 0 ? 'valid' : 'error'}\r\n                    />\r\n                    <Button size=\"xl\" disabled={!flag} onClick={() => this.sendForm()}>Зарегистрироваться</Button>\r\n                </FormLayout>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FirstLogin","import React from 'react'\r\n\r\nimport {View, Panel, PanelHeader, ScreenSpinner, Group, List, Cell, platform, IOS, HeaderButton, Input, Button, ModalRoot, ModalPage, ModalPageHeader, ModalCard, Textarea} from '@vkontakte/vkui'\r\n\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nclass ReportDraggingList extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            activePanel: 'main',\r\n            activeModal: null,\r\n            name: 'hello',\r\n            popout: <ScreenSpinner />,\r\n            report: {},\r\n            items: [],\r\n            editItem: null,\r\n            itemID: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${sessionStorage.getItem('address')}/api/v0/report/${this.props.reportID}/getdata`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'tehnarenok-token': sessionStorage.getItem('token')\r\n            }\r\n        }).then(data => {\r\n            return data.json()\r\n        }).then(data => {\r\n            if(data.error) {\r\n                this.props.goTo('error')\r\n                return\r\n            }\r\n            this.setState({report: data.report, popout: null})\r\n        })\r\n    }\r\n\r\n    addElement = () => {\r\n        this.setState({activeModal: 'addelement'})\r\n    }\r\n\r\n    addNewElement = (elementID) => {\r\n        var {items} = this.state \r\n        \r\n        if(elementID[0] === 'h') {\r\n            items.push({\r\n                type: elementID,\r\n                inputType: 'string',\r\n                modify: true,\r\n                description: elementID,\r\n                value: ''\r\n            })\r\n        } else if (elementID === 'text') {\r\n            items.push({\r\n                type: 'text',\r\n                inputType: 'text',\r\n                modify: true,\r\n                description: elementID,\r\n                value: ''\r\n            })\r\n        }\r\n        \r\n        this.setState({items: items})\r\n    }\r\n\r\n    editElement = (id) => {\r\n        var {items} = this.state\r\n        var item = items[id]\r\n        if(!item.modify) {\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            activeModal: 'edit',\r\n            editItem: item,\r\n            itemID: id\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n\r\n        var modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id='addelement'\r\n                    onClose={() => this.setState({activeModal: null})}\r\n                    settlingHeight={90}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={() => this.setState({activeModal: null})}>{platform() === IOS ? 'Готово' : <Icon24Done />}</HeaderButton>}\r\n                        >\r\n                            Элементы\r\n                        </ModalPageHeader>\r\n                    }\r\n                > \r\n                    <List>\r\n                        <Cell \r\n                            key='1'\r\n                            onClick={() => this.addNewElement('h1')}\r\n                        >\r\n                            Заголовок первого уровня\r\n                        </Cell>\r\n                        <Cell \r\n                            key='2'\r\n                            onClick={() => this.addNewElement('h2')}\r\n                        >\r\n                            Заголовок второго уровня\r\n                        </Cell>\r\n                        <Cell \r\n                            key='3'\r\n                            onClick={() => this.addNewElement('h3')}\r\n                        >\r\n                            Заголовок третьего уровня\r\n                        </Cell>\r\n                        <Cell \r\n                            key='4'\r\n                            onClick={() => this.addNewElement('text')}\r\n                        >\r\n                            Абзац\r\n                        </Cell>\r\n                    </List>\r\n                </ModalPage>\r\n                <ModalCard\r\n                    id='edit'\r\n                    onClose={() => {\r\n                        var {itemID, items, editItem} = this.state\r\n                        items[itemID] = editItem\r\n                        this.setState({activeModal: null, items: items})\r\n                    }}\r\n                    title='Изменение поля'\r\n                >\r\n                    {this.state.editItem && this.state.editItem.inputType === 'text' &&\r\n                        <Textarea \r\n                            value={this.state.editItem.value}\r\n                            onChange={(e) => {\r\n                                var {editItem} = this.state\r\n                                editItem.value = e.target.value \r\n                                this.setState({editItem: editItem})\r\n                            }}\r\n                        />\r\n                    }\r\n                    {this.state.editItem && this.state.editItem.inputType === 'string' &&\r\n                        <Input\r\n                            value={this.state.editItem.value}\r\n                            onChange={(e) => {\r\n                                console.log(e.target.value)\r\n                                var {editItem} = this.state\r\n                                editItem.value = e.target.value \r\n                                this.setState({editItem: editItem})\r\n                            }}\r\n                        />\r\n                    }\r\n                </ModalCard>\r\n            </ModalRoot>\r\n        )\r\n        \r\n        return(\r\n            <View id={this.props.id} activePanel={this.state.activePanel} popout={this.state.popout} modal={modal}>\r\n                <Panel id='main'>\r\n                    <PanelHeader\r\n                        left={<HeaderButton onClick={this.props.goTo}>\r\n                            {platform() === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n                            </HeaderButton>}\r\n                    >\r\n                        {this.state.report.name}\r\n                    </PanelHeader>\r\n                    <Group title='Описание'>\r\n                        <p>\r\n                            Для отчета необходимо загрузить файлы с кодом.\r\n                        </p>\r\n                        <p>\r\n                            Текст в отчете можно добавить кликнув на значок +\r\n                        </p>\r\n                    </Group>\r\n                    <Group title='Входные данные'>\r\n                        <Button size='xl' onClick={this.addElement}>Добавить элемент</Button>\r\n                        {this.state.report.structureFrontend && this.state.report.structureFrontend.indexOf('file_code') >= 0 ? <Input type='file' multiple/> : null} \r\n                    </Group>\r\n                    <Group title='Содержание отчета'>\r\n                        <List>    \r\n                            <Cell key='-1'>Титульный лист</Cell>\r\n                            {this.state.items && this.state.items.length > 0 && this.state.items.map((value, index) => {\r\n                                return (\r\n                                    <Cell \r\n                                        onDragFinish={({ from, to }) => {\r\n                                            if(to === 0) {\r\n                                                to = 1\r\n                                            }\r\n                                            from --\r\n                                            to --\r\n                                            if(to === NaN || from === NaN) {\r\n                                                return\r\n                                            }\r\n                                            console.log(from, to)\r\n                                            var {items} = this.state\r\n                                            var item = items[from]\r\n                                            items[from] = items[to]\r\n                                            items[to] = item \r\n                                            this.setState({items: items})\r\n                                        }}\r\n                                        before={<Button onClick={() => this.editElement(index)}>Edit</Button> } \r\n                                        draggable\r\n                                        key={index}\r\n                                        description={value.description}\r\n                                        \r\n                                    >{value.value}</Cell>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReportDraggingList","import React from 'react'\r\nimport {View, Panel, PanelHeader, ScreenSpinner, List, Cell, Group, platform, IOS, HeaderButton} from '@vkontakte/vkui'\r\n\r\nimport ReportDraggingList from './Report/ReportDraggingList'\r\n\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\n\r\nclass Reports extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            activePanel: 'reports',\r\n            reports: [],\r\n            popout: null,\r\n            isFetching: false,\r\n            reportID: null,\r\n            error: false\r\n        }\r\n\r\n        //this.goTo = this.goTo.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(sessionStorage.getItem('address') + '/api/v0/allreports', {\r\n            method: 'GET',\r\n            headers: {\r\n                'tehnarenok-token': sessionStorage.getItem('token')\r\n            }\r\n        }).then(data => {\r\n            return data.json()\r\n        }).then(data => {\r\n            this.setState({reports: data.reports, popout: null})\r\n        })\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({popout: <ScreenSpinner />})\r\n        fetch(sessionStorage.getItem('address') + '/api/v0/allreports', {\r\n            method: 'GET',\r\n            headers: {\r\n                'tehnarenok-token': sessionStorage.getItem('token')\r\n            }\r\n        }).then(data => {\r\n            return data.json()\r\n        }).then(data => {\r\n            console.log(data)\r\n            if(data.error) {\r\n                this.setState({activePanel: 'error'})\r\n                return\r\n            }\r\n            this.setState({popout: null, reports: data.reports})\r\n        })\r\n    }\r\n\r\n    onClickReport = (reportID, type) => {\r\n        switch (type) {\r\n            case 'draggingList':\r\n                this.setState({activePanel: 'reportdragginglist', reportID: reportID})\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    goTo = (activePanel) => {\r\n        console.log('goTo')\r\n        this.setState({activePanel: activePanel})\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        //console.log(this.props)\r\n        if(this.state.activePanel === 'reportdragginglist') {\r\n            return (\r\n                <ReportDraggingList id='reportdragginglist' reportID={this.state.reportID} goTo={() => this.setState({activePanel: 'reports'})}/>\r\n            )\r\n        }\r\n        return (\r\n            <View id={this.props.id} activePanel={this.state.activePanel} popout={this.state.popout}>\r\n                <Panel id='reports'>\r\n                    <PanelHeader>\r\n                        Отчеты\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <List>\r\n                            {this.state.reports && this.state.reports.length > 0 && this.state.reports.map((value) => {\r\n                                return (\r\n                                    <Cell \r\n                                        key={value._id} \r\n                                        description={value.discription}\r\n                                        onClick={() => this.onClickReport(value._id, value.structureID)}\r\n                                    >{value.name}</Cell>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n                <Panel id='error'>\r\n                    <PanelHeader\r\n                        left={<HeaderButton onClick={() => this.setState({activePanel: 'reports'})}>{platform() === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}\r\n                    >\r\n                        Ошибка\r\n                    </PanelHeader>\r\n                </Panel>\r\n                \r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reports","import React from 'react'\r\n\r\nimport {View, Panel, Epic, Tabbar, TabbarItem, PanelHeader} from '@vkontakte/vkui'\r\n\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\n\r\nimport Reports from './Reports'\r\n\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            activeStory: 'reports'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Epic id={this.props.id} activeStory={this.state.activeStory} tabbar ={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={() => this.setState({activeStory: 'reports'})}\r\n                        selected={this.state.activeStory === 'reports'}\r\n                        text='Отчеты'\r\n                    >\r\n                        <Icon24Note />\r\n                    </TabbarItem>\r\n                    \r\n                    <TabbarItem \r\n                        onClick={() => this.setState({activeStory: 'settings'})}\r\n                        selected={this.state.activeStory === 'settings'}\r\n                        text='Настройки'\r\n                    >\r\n                        <Icon24Settings />\r\n                    </TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <Reports id='reports' />\r\n                <View id='settings' activePanel='settings'>\r\n                    <Panel id='settings'>\r\n                        <PanelHeader>\r\n                            Настройки\r\n                        </PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport { View, Panel, ScreenSpinner, PanelHeader } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport FirstLogin from './panels/FirstLogin'\nimport Home from './panels/Home'\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'black',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner />,\n\t\t\ttoken: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.sendPromise('VKWebAppGetUserInfo', {})\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({ fetchedUser: data})\n\t\t\t\tfetch(sessionStorage.getItem('address') + `/api/v0/gettoken?userid=${this.state.fetchedUser.id}`, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t}).then(data => {\n\t\t\t\t\treturn data.json()\n\t\t\t\t}).then(data => {\n\t\t\t\t\tif(data.token) {\n\t\t\t\t\t\tsessionStorage.setItem('token', data.token)\n\t\t\t\t\t\t//console.log(sessionStorage.getItem('token'))\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tactivePanel: 'home',\n\t\t\t\t\t\t\tpopout: null,\n\t\t\t\t\t\t\ttoken: data.token\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tactivePanel: 'firstlogin',\n\t\t\t\t\t\t\tpopout: null\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t// connect.sendPromise('VKWebAppGetAuthToken', {app_id: 7156583, scope: 'docs'})\n\t\t// \t.then(data => {\n\t\t// \t\tsessionStorage.setItem('VKtoken', data.access_token)\n\t\t// \t\tconsole.log(sessionStorage.getItem('VKtoken'))\n\t\t// \t})\n\t\t// \t.catch(error => {\n\t\t// \t\tconsole.log(error);\n\t\t// \t\tthis.setState({activePanel: 'black'})\t\n\t\t// \t})\n\t\t\n\t}\n\n\tgo = (panel) => {\n\t\tthis.setState({\n\t\t\tpopout: null,\n\t\t\tactivePanel: panel\n\t\t})\n\t}\n\n\trender() {\n\t\tconsole.log(this.state)\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t<Panel id='black'> </Panel>\n\t\t\t\t<FirstLogin id='firstlogin' go={this.go} />\n\t\t\t\t<Home id='home' />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\nsessionStorage.setItem('address', 'https://4239c859.ngrok.io')\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n \n        default:\n            //console.log(e.detail.type);\n    }\n });\n\nconnect.sendPromise('VKWebAppGetAuthToken', {app_id: 7156583, scope: 'docs'})\n    .then(data => {\n        sessionStorage.setItem('VKtoken', data.access_token)\n        console.log(sessionStorage.getItem('VKtoken'))\n    })\n    .catch(error => {\n        console.log(error);\n        this.setState({activePanel: 'black'})\t\n    })\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}